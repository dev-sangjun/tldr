{"version":3,"sources":["reducers/user.js","reducers/modal.js","reducers/loading.js","reducers/index.js","api/index.js","global/GlobalStyle.js","components/Navbar.js","components/styled/index.js","components/Sidebar.js","components/Modal.js","components/LoginForm.js","components/FolderForm.js","components/PostForm.js","utils/index.js","components/Post.js","components/Hero.js","routes/Home.js","routes/Public.js","App.js","serviceWorker.js","index.js"],"names":["setUser","user","type","openModal","component","initialState","isOpen","setLoading","loading","combineReducers","state","action","modal","BASE_URL","getheaders","authorization","localStorage","getItem","register","username","email","password","axios","post","login","fetch","config","headers","get","createPost","folder","title","content","body","updatePost","id","patch","deletePost","delete","createFolder","deleteFolder","updateFolder","createGlobalStyle","Logo","styled","header","NavItems","ul","props","className","useSelector","dispatch","useDispatch","onClick","window","confirm","setItem","Header","Content","p","TextField","input","TextArea","textarea","Submit","button","attrs","Button","div","onFolderClick","foldersList","useRef","e","index","target","dataset","Array","from","current","children","map","list","classList","add","remove","parseInt","renderFolders","data-index","size","ref","folders","key","_id","style","display","useState","loginMode","setLoginMode","errorMessage","setErrorMessage","useEffect","focus","onSubmit","a","preventDefault","value","res","data","res_","response","message","console","log","placeholder","color","name","getTwoDigitString","num","String","updatedAt","date","month","getMonth","day","getDate","getFullYear","getDateString","Date","onEdit","onDelete","source","text","lorem","LoremIpsum","generateWords","Overlay","setIndex","onFolderDelete","init","renderPost","renderPosts","posts","App","exact","path","Home","Public","GlobalStyle","Boolean","location","hostname","match","store","createStore","reducers","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e98b59a3.chunk.js","sourcesContent":["export const SET_USER = \"USER/SET_USER\";\n\nexport const setUser = user => ({\n  type: SET_USER,\n  user,\n});\n\nconst initialState = null;\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return action.user;\n    default:\n      return state;\n  }\n}\n","export const OPEN_MODAL = \"MODAL/OPEN_MODAL\";\nexport const CLOSE_MODAL = \"MODAL/CLOSE_MODAL\";\n\nexport const openModal = component => ({\n  type: OPEN_MODAL,\n  component,\n});\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n});\n\nconst initialState = {\n  isOpen: false,\n  component: null,\n};\n\nexport default function modal(state = initialState, action) {\n  switch (action.type) {\n    case OPEN_MODAL:\n      return {\n        isOpen: true,\n        component: action.component,\n      };\n    case CLOSE_MODAL:\n      return {\n        isOpen: false,\n        component: null,\n      };\n    default:\n      return state;\n  }\n}\n","export const SET_LOADING = \"LOADING/SET_LOADING\";\n\nexport const setLoading = loading => ({\n  type: SET_LOADING,\n  loading,\n});\n\nconst initialState = false;\n\nexport default function loading(state = initialState, action) {\n  switch (action.type) {\n    case SET_LOADING:\n      return action.loading;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport modal from \"./modal\";\nimport loading from \"./loading\";\nexport * from \"./user\";\nexport * from \"./modal\";\nexport * from \"./loading\";\nexport default combineReducers({\n  user,\n  modal,\n  loading,\n});\n","import axios from \"axios\";\nconst BASE_URL = \"http://localhost:5000\";\n\nconst getheaders = () => ({\n  authorization: `Bearer ${localStorage.getItem(\"tldr/token\")}`,\n});\n\nexport const register = (username, email, password) =>\n  axios.post(BASE_URL + \"/register\", { username, email, password });\n\nexport const login = (username, password) =>\n  axios.post(BASE_URL + \"/login\", { username, password });\n\nexport const fetch = () => {\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.get(BASE_URL + \"/users/me\", config);\n};\n\nexport const createPost = (folder, title, content) => {\n  const body = {\n    folder,\n    title,\n    content,\n  };\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.post(BASE_URL + \"/posts\", body, config);\n};\n\nexport const updatePost = (id, title, content) => {\n  const body = {\n    title,\n    content,\n  };\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.patch(BASE_URL + `/posts/${id}`, body, config);\n};\n\nexport const deletePost = id => {\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.delete(BASE_URL + `/posts/${id}`, config);\n};\n\nexport const createFolder = title => {\n  const body = {\n    title,\n  };\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.post(BASE_URL + \"/folders\", body, config);\n};\n\nexport const deleteFolder = id => {\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.delete(BASE_URL + `/folders/${id}`, config);\n};\n\nexport const updateFolder = (id, title) => {\n  const body = {\n    title,\n  };\n  const config = {\n    headers: getheaders(),\n  };\n  return axios.patch(BASE_URL + `/folders/${id}`, body, config);\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n  .btn {\n    &:hover {\n      opacity: 0.7;\n      cursor: pointer;\n    }\n  }\n  .bold {\n    font-weight: bold\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { openModal, setUser } from \"../reducers\";\nimport { LoginForm } from \"../components\";\n\nconst Navbar = props => {\n  const { className } = props;\n  const { user } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onLogin = () => {\n    if (user) {\n      if (window.confirm(\"Are you sure you want to log out?\")) {\n        dispatch(setUser(null));\n        localStorage.setItem(\"tldr/token\", null);\n      }\n    } else dispatch(openModal(<LoginForm />));\n  };\n  return (\n    <div className={className}>\n      <Logo>TL;DR</Logo>\n      <NavItems>\n        <li className=\"btn\" onClick={onLogin}>\n          {user ? \"Logout\" : \"Login\"}\n        </li>\n      </NavItems>\n    </div>\n  );\n};\n\nconst Logo = styled.header`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 1.2em;\n  font-weight: bold;\n  user-select: none;\n`;\n\nconst NavItems = styled.ul`\n  list-style: none;\n  display: flex;\n`;\n\nexport default styled(Navbar)`\n  position: relative;\n  z-index: 2;\n  padding: 1rem;\n  box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  font-size: 1.2em;\n  font-weight: bold;\n`;\n\nexport const Content = styled.p`\n  font-size: 1em;\n  white-space: pre-wrap;\n`;\n\nexport const TextField = styled.input`\n  background-color: #f4f5f7;\n  border: none;\n  border-radius: 0.25rem;\n  font-size: 0.8em;\n  padding: 0.5rem 0.75rem;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  background-color: #f4f5f7;\n  border: none;\n  border-radius: 0.25rem;\n  font-size: 0.8em;\n  padding: 0.5rem 0.75rem;\n  resize: none;\n  &:focus {\n    outline: none;\n  }\n`;\nexport const Submit = styled.button.attrs({ type: \"submit\" })`\n  border: none;\n  border-radius: 0.25rem;\n  font-size: 0.8em;\n  padding: 0.5rem 0.75rem;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Button = styled.button`\n  border: none;\n  border-radius: 0.25rem;\n  font-size: 0.8em;\n  padding: 0.5rem 0.75rem;\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Card = styled.div`\n  border-radius: 0.25rem;\n  box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n`;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdAdd } from \"react-icons/md\";\nimport { openModal } from \"../reducers\";\nimport { FolderForm } from \"../components\";\nimport { Header } from \"../components/styled\";\n\nconst Sidebar = props => {\n  const { className, onFolderClick } = props;\n  const { user } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const foldersList = useRef();\n  const onClick = e => {\n    const index = e.target.dataset.index;\n    Array.from(foldersList.current.children).map(list => {\n      if (list.dataset.index === index) return list.classList.add(\"bold\");\n      else return list.classList.remove(\"bold\");\n    });\n    onFolderClick(parseInt(index));\n  };\n  const onAdd = () => {\n    dispatch(openModal(<FolderForm />));\n  };\n  const renderFolders = user && (\n    <div className=\"folders-container\">\n      <div className=\"top-container\">\n        <Header\n          className=\"recent-posts-header btn\"\n          onClick={onClick}\n          data-index=\"-1\"\n        >\n          Recent Posts\n        </Header>\n        <div className=\"folders-header-container\">\n          <Header className=\"folders-header\">My Folders</Header>\n          <MdAdd className=\"add-btn btn\" size=\"1.2em\" onClick={onAdd} />\n        </div>\n      </div>\n      <ul className=\"folders-list\" ref={foldersList}>\n        {user.folders.map((folder, index) => (\n          <li\n            className=\"folder-title btn\"\n            key={folder._id}\n            onClick={onClick}\n            data-index={index}\n          >\n            {folder.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n\n  return <div className={className}>{renderFolders}</div>;\n};\n\nexport default styled(Sidebar)`\n  background-color: white;\n  width: 14rem;\n  height: 100%;\n  box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n  padding: 1rem;\n  .folders-container {\n    .top-container {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 0.5rem;\n      .recent-posts-header {\n        margin-bottom: 0.5rem;\n      }\n      .folders-header-container {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        .folders-header {\n        }\n        .add-btn {\n          position: relative;\n          top: -0.125rem;\n        }\n      }\n    }\n    .folders-list {\n      list-style: none;\n      padding-left: 0.5rem;\n      .folder-title {\n        width: 100%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        margin-bottom: 0.5rem;\n        &:last-child {\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdClear } from \"react-icons/md\";\nimport { closeModal } from \"../reducers\";\n\nconst Modal = props => {\n  const { className } = props;\n  const { isOpen, component } = useSelector(state => state.modal);\n  const dispatch = useDispatch();\n  const onClose = e => {\n    dispatch(closeModal());\n  };\n  return (\n    <div\n      id=\"modal-container\"\n      className={className}\n      style={{ display: isOpen ? \"flex\" : \"none\" }}\n    >\n      <div className=\"modal-wrapper\">\n        {component}\n        <MdClear className=\"close-btn btn\" onClick={onClose} />\n      </div>\n    </div>\n  );\n};\n\nexport default styled(Modal)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(0.125rem);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .modal-wrapper {\n    position: relative;\n    background-color: white;\n    width: 30rem;\n    height: 40rem;\n    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.1);\n    border-radius: 0.25rem;\n    .close-btn {\n      position: absolute;\n      top: 1rem;\n      right: 1rem;\n      font-size: 1.5em;\n    }\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser, closeModal } from \"../reducers\";\nimport { Header, TextField, Submit } from \"./styled\";\nimport { login, register, fetch } from \"../api\";\n\nconst LoginForm = props => {\n  const { className } = props;\n  const [loginMode, setLoginMode] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const username = useRef(),\n    email = useRef(),\n    password = useRef();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    username.current.focus();\n  }, [loginMode]);\n  const onSubmit = async e => {\n    e.preventDefault();\n    // login user\n    setLoading(true);\n    setErrorMessage(\"\");\n    try {\n      if (loginMode) {\n        const res = await login(username.current.value, password.current.value);\n        localStorage.setItem(\"tldr/token\", res.data);\n        const res_ = await fetch();\n        dispatch(setUser(res_.data));\n        dispatch(closeModal());\n        setLoading(false);\n      } else {\n        await register(\n          username.current.value,\n          email.current.value,\n          password.current.value\n        );\n        setLoading(false);\n        setLoginMode(true);\n      }\n    } catch (e) {\n      setLoading(false);\n      setErrorMessage(e.response.data.message);\n      console.log(e.response.data);\n    }\n  };\n  const onModeClick = e => {\n    setLoginMode(!loginMode);\n  };\n  return (\n    <div className={className}>\n      <Header className=\"header\">{loginMode ? \"Login\" : \"Sign Up\"}</Header>\n      <form className=\"login-form\" onSubmit={onSubmit}>\n        <TextField\n          className=\"text-input\"\n          placeholder=\"Username\"\n          ref={username}\n        />\n        {!loginMode && (\n          <TextField\n            type=\"email\"\n            className=\"text-input\"\n            placeholder=\"Email\"\n            ref={email}\n          />\n        )}\n        <TextField\n          className=\"text-input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          ref={password}\n        />\n        <Submit className=\"submit-btn btn\">\n          {loading ? (\n            <ClipLoader size=\"1em\" color=\"white\" />\n          ) : loginMode ? (\n            \"Login\"\n          ) : (\n            \"Sign Up\"\n          )}\n        </Submit>\n      </form>\n      <div className=\"btm-container\">\n        <span className=\"mode-label\">\n          {loginMode ? \"Not\" : \"Already\"} registered?\n        </span>\n        <span className=\"btn\" onClick={onModeClick}>\n          {loginMode ? \"Sign Up\" : \"Login\"}\n        </span>\n      </div>\n      <span className=\"error-message\">{errorMessage}</span>\n    </div>\n  );\n};\n\nexport default styled(LoginForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .header {\n    margin-bottom: 1rem;\n  }\n  .login-form {\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 1rem;\n    .text-input {\n      width: 100%;\n      margin-bottom: 0.5rem;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n    .submit-btn {\n      width: 100%;\n      color: white;\n      background-color: #767676;\n      box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n    }\n  }\n  .btm-container {\n    display: flex;\n    justify-content: center;\n    .mode-label {\n      margin-right: 1rem;\n      color: gray;\n    }\n  }\n  .error-message {\n    color: red;\n  }\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Header, TextField, Submit } from \"./styled\";\nimport { useDispatch } from \"react-redux\";\nimport { closeModal, setUser } from \"../reducers\";\nimport { createFolder, fetch, updateFolder } from \"../api\";\nconst FolderForm = props => {\n  const { className, folder } = props;\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const title = useRef();\n  const onSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      if (folder) {\n        await updateFolder(folder._id, title.current.value);\n      } else {\n        await createFolder(title.current.value);\n      }\n      const res = await fetch();\n      dispatch(setUser(res.data));\n      setLoading(false);\n      dispatch(closeModal());\n    } catch (e) {\n      setLoading(false);\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    if (folder) {\n      title.current.value = folder.title;\n    }\n    title.current.focus();\n  }, [folder]);\n  return (\n    <div className={className}>\n      <Header className=\"header\">\n        {folder ? \"Edit Folder\" : \"New Folder\"}\n      </Header>\n      <form className=\"folder-form\" onSubmit={onSubmit}>\n        <TextField\n          className=\"text-input\"\n          name=\"title\"\n          placeholder=\"Title\"\n          ref={title}\n        />\n        <Submit className=\"submit-btn btn\">\n          {loading ? (\n            <ClipLoader size=\"1em\" color=\"white\" />\n          ) : folder ? (\n            \"Complete\"\n          ) : (\n            \"Add\"\n          )}\n        </Submit>\n      </form>\n    </div>\n  );\n};\n\nexport default styled(FolderForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .header {\n    margin-bottom: 1rem;\n  }\n  .folder-form {\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 1rem;\n    .text-input {\n      width: 100%;\n      margin-bottom: 0.5rem;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n    .submit-btn {\n      width: 100%;\n      color: white;\n      background-color: #767676;\n      box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n    }\n  }\n`;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ClipLoader } from \"react-spinners\";\nimport { Header, TextField, TextArea, Submit } from \"./styled\";\nimport { useDispatch } from \"react-redux\";\nimport { closeModal, setUser } from \"../reducers\";\nimport { createPost, fetch, updatePost } from \"../api\";\n\nconst PostForm = props => {\n  const { className, folder, post } = props;\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const title = useRef();\n  const content = useRef();\n  const onSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      if (post) {\n        await updatePost(post._id, title.current.value, content.current.value);\n      } else {\n        await createPost(folder, title.current.value, content.current.value);\n      }\n      const res = await fetch();\n      dispatch(setUser(res.data));\n      setLoading(false);\n      dispatch(closeModal());\n    } catch (e) {\n      setLoading(false);\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    if (post) {\n      title.current.value = post.title;\n      content.current.value = post.content;\n    }\n    title.current.focus();\n  }, [post]);\n  return (\n    <div className={className}>\n      <Header className=\"header\">{post ? \"Edit Post\" : \"New Post\"}</Header>\n      <form className=\"post-form\" onSubmit={onSubmit}>\n        <TextField\n          className=\"text-input\"\n          name=\"title\"\n          placeholder=\"Title\"\n          ref={title}\n        />\n        <TextArea className=\"text-area\" placeholder=\"Content\" ref={content} />\n        <Submit className=\"submit-btn btn\">\n          {loading ? (\n            <ClipLoader size=\"1em\" color=\"white\" />\n          ) : post ? (\n            \"Complete\"\n          ) : (\n            \"Add\"\n          )}\n        </Submit>\n      </form>\n    </div>\n  );\n};\n\nexport default styled(PostForm)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  .header {\n    margin-bottom: 1rem;\n  }\n  .post-form {\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 1rem;\n    .text-input,\n    .text-area {\n      width: 100%;\n      margin-bottom: 0.5rem;\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n    .text-area {\n      height: 20rem;\n      font-family: sans-serif;\n    }\n    .submit-btn {\n      width: 100%;\n      color: white;\n      background-color: #767676;\n      box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n    }\n  }\n`;\n","export const getTwoDigitString = num => (num < 10 ? `0${num}` : String(num));\nexport const getDateString = date => {\n  const month = getTwoDigitString(date.getMonth() + 1);\n  const day = getTwoDigitString(date.getDate());\n  return `${month}-${day}-${date.getFullYear()}`;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Header, Content } from \"./styled\";\nimport PostForm from \"./PostForm\";\nimport { getDateString } from \"../utils\";\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { setUser, setLoading, openModal } from \"../reducers\";\nimport { deletePost, fetch } from \"../api\";\nimport ReactMarkdown from \"react-markdown\";\nconst Post = props => {\n  const { className, post } = props;\n  const updatedAt = getDateString(new Date(post.updatedAt));\n  const dispatch = useDispatch();\n  const onEdit = async () => {\n    dispatch(openModal(<PostForm post={post} />));\n  };\n  const onDelete = async () => {\n    if (window.confirm(`Are you sure you want to delete ${post.title} post?`)) {\n      dispatch(setLoading(true));\n      try {\n        const res = await deletePost(post._id);\n        const res_ = await fetch();\n        dispatch(setUser(res_.data));\n        console.log(res.data);\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch(setLoading(false));\n    }\n  };\n  return (\n    <div className={className}>\n      <div className=\"top-container\">\n        <Header className=\"post-header\">{post.title}</Header>\n        <MdEdit className=\"post-icon btn\" onClick={onEdit} />\n        <MdDelete className=\"post-icon btn\" onClick={onDelete} />\n        <span className=\"date\">{updatedAt}</span>\n      </div>\n      <Content className=\"post-content\">\n        <ReactMarkdown source={post.content} />\n      </Content>\n    </div>\n  );\n};\n\nexport default styled(Post)`\n  background-color: white;\n  border-radius: 0.25rem;\n  box-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.2);\n  padding: 1rem;\n  width: 100%;\n  .top-container {\n    display: flex;\n    align-items: center;\n    .post-header {\n      flex: 1;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n    .post-icon {\n      position: relative;\n      top: -0.125rem;\n      margin-right: 0.5rem;\n      color: darkgray;\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n    .date {\n      width: 5.5rem;\n      color: gray;\n      text-align: right;\n    }\n  }\n  .post-content {\n    white-space: pre-wrap;\n    word-break: break-all;\n    padding-left: 0.5rem;\n    max-height: 15rem;\n    overflow-y: auto;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { LoremIpsum } from \"lorem-ipsum\";\nconst Hero = props => {\n  const { className, text } = props;\n  const lorem = new LoremIpsum();\n  return (\n    <div className={className}>\n      <p className=\"bg-text\">{lorem.generateWords(1000)}</p>\n      <header className=\"hero-header\">{text}</header>\n    </div>\n  );\n};\n\nexport default styled(Hero)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  background-image: linear-gradient(135deg, #feb692, #ea5455);\n  padding: 1rem;\n  overflow: hidden;\n  .bg-text {\n    opacity: 0.3;\n    transform: rotate(15deg) scale(1.5);\n    user-select: none;\n  }\n  .hero-header {\n    position: absolute;\n    bottom: 2rem;\n    right: 2rem;\n    font-size: 3em;\n    color: white;\n    font-weight: bold;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdAdd, MdDelete, MdEdit } from \"react-icons/md\";\nimport { ClipLoader } from \"react-spinners\";\nimport { openModal, setUser, setLoading } from \"../reducers\";\nimport { Sidebar, PostForm, Post, FolderForm } from \"../components\";\nimport { Header, Button } from \"../components/styled\";\nimport { deleteFolder, fetch } from \"../api\";\n\nconst Home = props => {\n  const { className } = props;\n  const { user } = useSelector(state => state);\n  const { loading } = useSelector(state => state);\n  const [index, setIndex] = useState(-1);\n  const dispatch = useDispatch();\n  const onFolderClick = index => setIndex(index);\n  const onFolderEdit = () => {\n    dispatch(openModal(<FolderForm folder={user.folders[index]} />));\n  };\n  const onFolderDelete = async () => {\n    if (\n      window.confirm(\n        `Are you sure you want to delete ${user.folders[index].title} folder?`\n      )\n    ) {\n      const id = user.folders[index]._id;\n      dispatch(setLoading(true));\n      try {\n        await deleteFolder(id);\n        const res = await fetch();\n        setIndex(-1);\n        dispatch(setUser(res.data));\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch(setLoading(false));\n    }\n  };\n  const onCreatePost = () => {\n    dispatch(openModal(<PostForm folder={user.folders[index]._id} />));\n  };\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const res = await fetch();\n        dispatch(setUser(res.data));\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    if (!user) init();\n  }, [dispatch, user]);\n  const renderPost = post => (\n    <li key={post._id}>\n      <Post className=\"post\" post={post} />\n    </li>\n  );\n  const renderPosts = user && (\n    <div className=\"posts-container\">\n      <div className=\"top-container\">\n        <Header className=\"folders-header\">\n          {index === -1 ? \"Recent Posts\" : user.folders[index].title}\n        </Header>\n        {index !== -1 && (\n          <Button className=\"edit-btn btn\" onClick={onFolderEdit}>\n            <MdEdit size=\"1.2em\" />\n          </Button>\n        )}\n        {index !== -1 && (\n          <Button className=\"delete-btn btn\" onClick={onFolderDelete}>\n            <MdDelete size=\"1.2em\" />\n          </Button>\n        )}\n        {index !== -1 && (\n          <Button className=\"add-btn btn\" onClick={onCreatePost}>\n            <MdAdd size=\"1.2em\" />\n          </Button>\n        )}\n      </div>\n      <ul className=\"posts\">\n        {index === -1\n          ? user.posts.map(post => renderPost(post))\n          : user.folders[index].posts.map(post => renderPost(post))}\n      </ul>\n    </div>\n  );\n  return (\n    <div className={className}>\n      <Sidebar onFolderClick={onFolderClick} />\n      {renderPosts}\n      {loading && (\n        <Overlay>\n          <ClipLoader size=\"3em\" color=\"gray\" />\n        </Overlay>\n      )}\n    </div>\n  );\n};\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.5);\n  backdrop-filter: blur(0.125rem);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default styled(Home)`\n  flex: 1;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  .posts-container {\n    width: calc(100% - 14rem);\n    overflow-y: auto;\n    padding: 3rem;\n    .top-container {\n      display: flex;\n      align-items: center;\n      margin-bottom: 0.5rem;\n      .folders-header {\n        font-size: 1.8em;\n        margin-right: 1rem;\n      }\n      .edit-btn,\n      .delete-btn,\n      .add-btn {\n        position: relative;\n        top: -0.125rem;\n        color: white;\n        font-size: 0.8em;\n        display: flex;\n        align-items: center;\n        span {\n          margin-right: 0.5rem;\n        }\n      }\n      .edit-btn {\n        background-color: #f29f05;\n        margin-right: 0.5rem;\n      }\n      .delete-btn {\n        background-color: #f28705;\n        margin-right: 0.5rem;\n      }\n      .add-btn {\n        background-color: #185905;\n      }\n    }\n    .posts {\n      list-style: none;\n      width: 100%;\n      padding: 0.5rem;\n      li {\n        margin-bottom: 1rem;\n        &:last-child {\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Hero } from \"../components\";\n\nconst Public = props => {\n  const { className } = props;\n  return (\n    <div className={className}>\n      <Hero text=\"TL;DR. Make it concise.\" />\n    </div>\n  );\n};\n\nexport default styled(Public)`\n  height: 100%;\n  overflow: hidden;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport \"./css/App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUser } from \"./reducers\";\nimport { fetch } from \"./api\";\nimport { GlobalStyle } from \"./global\";\nimport { Home, Public } from \"./routes\";\nimport { Navbar, Modal } from \"./components\";\n\n/*\n  TODO:\n  1. Public page (DONE)\n  3. Error message, Form validation (ON ALL FORMS)\n*/\nfunction App() {\n  const { user } = useSelector(state => state);\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const init = async () => {\n      try {\n        const res = await fetch();\n        dispatch(setUser(res.data));\n        setLoading(false);\n      } catch (e) {\n        console.log(e);\n        setLoading(false);\n      }\n    };\n    if (!user) init();\n  }, [dispatch, user]);\n  return loading ? null : (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={user ? Home : Public} />\n        </Switch>\n        <Modal />\n        <GlobalStyle />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}